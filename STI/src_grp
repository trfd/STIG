#!/usr/bin/env ruby

require 'fileutils'
require 'pathname'

if(ARGV.length == 0)
	puts "src_grp: Require at least one argument for source folder"
	Kernel.exit(false)
end

src_dir = ARGV[0]

puts "Run source grouping for #{src_dir}"

old_wd = Pathname.new( Dir.pwd )

puts "Save Working Director = #{old_wd}"

## CMake Working Directory
cmake_wd = File.dirname(__FILE__)

Dir.chdir(cmake_wd)

puts "Working Directory: #{cmake_wd}"

## File writing location
##cmake_cfg = File.new("cmake_config/src_group.cmake")

output_file = "src_group.cmake"

if(ARGV.length > 1)
	output_file = ARGV[1]
end

FileUtils.mkdir_p(File.dirname(output_file))
File.open(output_file, 'w') {}


puts "Write configuration file: #{output_file}"

def write_conf(dir,out_f)

  	tmp = dir.to_s.gsub(/\/$/ ,'')

  	var_n = tmp.gsub(/[\/\s]/,'_')
  	sol_p = tmp.gsub(/[\/\s]/,"\\_")
  	sol_p = sol_p.to_s.gsub(/[_]/,"\\")

  	puts sol_p

	open(out_f, 'a') { |f|
  		f.puts "FILE(GLOB #{var_n} ${SOURCE_GROUP_PREFIX}/#{dir}*)"
		f.puts "SOURCE_GROUP(\"#{sol_p}\" FILES ${#{var_n}})"
		f.puts ""
  	}

end

## Root of sources file
directories = Dir[src_dir+'/*/']

dir = directories

idx = 0

parentIdx = [0]

currDir = Pathname.new(cmake_wd+"/"+src_dir+"/")

while idx <= dir.length && parentIdx.length != 0 do
	if idx >= dir.length
		idx = parentIdx.pop
		currDir = currDir+'..'
		dir = Dir[currDir+'*/']
		idx+=1
	else
		parentIdx.push(idx)
		currDir = Pathname.new(dir.at(idx))
		dir = Dir[currDir+'*/']
		idx = 0
		write_conf(currDir,output_file)
	end
end 


Dir.chdir(old_wd)